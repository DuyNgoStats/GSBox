install.packages('Roxygen2')
install.packages('roxygen2')
library(devtools)
library(roxygen2)
setwd("C:/Users/dpz9471/OneDrive/4. Research/3 Geometry Surface Boxplot/RCode/GitHub/GSBox")
roxygenise(clean = TRUE)
use_package('GSBox')
document()
load_all()
use_package('GSBox')
load_all()
load_all()
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
library(roxygen2)
library(devtools)
setwd("C:/Users/dpz9471/OneDrive/4. Research/3 Geometry Surface Boxplot/RCode/GitHub/GSBox")
roxygenise(clean=TRUE)
use_package('GSBox')
document()
load_all()
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
library(MASS)
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
document()
getwd()
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
roxygenise(clean = TRUE)
getwd()
roxygenise(clean = TRUE)
library(roxygen2)
roxygenise(clean = TRUE)
library(GSBox)
col1 <- colorRampPalette(c("white","blue","blue","yellow", "red"))
n_time = 200
trials = 100
n_channel = 15
n_indpt = 5   ##frequency band
tau = rep(1, trials)
n.sim = 100
module = evol(rep(1.001, 5), 0.00001, trials, n_indpt)
nM = 5
m0 = rep(0, nM)
##### Mixing matrix
M1 = rbind(cbind(rep(1, nM),  rep(0.2, nM),   m0,   m0,   m0),
cbind(rep(1, nM),  rep(0.5, nM),   m0,     m0,    m0),
cbind(rep(0.1, nM), rep(0.2, nM),  rep(0.5, nM),   m0,  m0))
M2 = rbind(cbind(rep(1, nM),  rep(0.2, nM),   m0,   m0,   m0),
cbind(rep(1, nM),  rep(0.5, nM),   m0,     m0,    m0),
cbind(rep(0.1, nM), rep(0.2, nM),  rep(0.5, nM),   m0,  m0))
M = rbind(M1, M2)
Sigma1 = matrix(0.6, n_channel, n_channel)
Sigma2 = matrix(0.6, n_channel, n_channel)
Rho = matrix(0.3, 15, 15)  ####entries must be less than 0.6
Sigma = rbind(cbind(Sigma1, Rho),
cbind(Rho, Sigma2))
diag(Sigma) = 1
X = generate_time(module, sigma=rep(.05, trials), Sigma, M, 2*n_channel, n_indpt, trials, n_time)
X.ts = X$realization
cohX = array(0,dim = c(n_channel, n_channel, trials))
for(j in 1:trials){
X.sim = X.ts[1:15,,j]
f.smooth = SpectrumEstimate(X.sim, n_time, span=30, n_channel)
cohX[,,j] = CoherenceEstimate(f.smooth,c(1:3))
}
plotCohereneMatrix(cohX[,,30], col1)
cohY=cohX
rankSumTest(cohX, cohY, n_channel, trials)
rankSignedTest(cohX, cohY, n_channel, trials)
rankSumTestMVD(cohX, cohY)
setwd("C:/Users/dpz9471/OneDrive/4. Research/3 Geometry Surface Boxplot/RCode/GitHub/GSBox")
